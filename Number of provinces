//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution {
  public:
   void dfs(int u,int vis[],vector<int> adj[]){
       vis[u]=1;
       for(auto i : adj){
           if(!vis[i])dfs(i,vis,adj);
       }
       
   }
    
  
    int numProvinces(vector<vector<int>> adj, int v) {
      
      int n=0;
      int vis[n] ={0};
      vector<int> adjl[v+1];
      for(int i=0;i<v;i++){
          for(int j=0;j<v;j++){
              if(adj[i][j] == 1){
                  adjl[i].push_back(j);
                  adjl[j].push_back(i);
              }
          }
      }
      
      for(int i=0;i<v;i++){
          if(!vis[i]){
              dfs(i,vis,adjl);
              n++;
          }
      }
         return n;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int V,x;
        cin>>V;
        
        vector<vector<int>> adj;
        
        for(int i=0; i<V; i++)
        {
            vector<int> temp;
            for(int j=0; j<V; j++)
            {
                cin>>x;
                temp.push_back(x);
            }
            adj.push_back(temp);
        }
        

        Solution ob;
        cout << ob.numProvinces(adj,V) << endl;
    }
    return 0;
}
// } Driver Code Ends
